---
- name: Ensure required packages are installed
  ansible.builtin.dnf:
    name:
      - ansible-collection-community-general
      - ansible-collection-ansible-posix
      - openssh
    state: present
- name: Ensure directory for ansible auth files exists
  ansible.builtin.file:
    path: /etc/ansible/auth
    state: directory
    owner: root
    group: "{{ provisioning.group.name }}"
    mode: '0750'
- name: Ensure default directory for custom facts exists
  ansible.builtin.file:
    path: /etc/ansible/fact.d
    state: directory
    owner: root
    group: root
    mode: '0755'
- name: Ensure any custom facts have been installed
  ansible.builtin.debug:
    msg: installing custom facts
- name: Ensure setup is run
  ansible.builtin.setup:
- name: Ensure provisioning group exists
  ansible.builtin.group:
    name: "{{ provisioning.group.name }}"
    state: present
    gid: "{{ provisioning.group.gid }}"
- name: Ensure provisioning user exists
  ansible.builtin.user:
    name: "{{ provisioning.user.name }}"
    comment: "{{ provisioning.user.comment | default(omit) }}"
    uid: "{{ provisioning.user.uid }}"
    group: "{{ provisioning.group.name }}"
    groups: wheel
    append: yes
    #generate_ssh_key: yes
    #ssh_key_file: /etc/ansible/auth/ansible
    state: present
- name: Ensure provisioning user can use sudo
  ansible.builtin.copy:
    dest: /etc/sudoers.d/{{ provisioning.user.name }}
    content: '{{ provisioning.user.name }} ALL=(ALL) NOPASSWD: ALL'
    owner: root
    group: wheel
    mode: 0440
- name: Ensure the systemd service and timer files exist for ansible-pull
  ansible.builtin.template:
    src: "{{ item }}.js"
    dest: /etc/systemd/system/{{ item }}
    owner: root
    group: root
    mode: '0644'
  loop:
    - ansible-pull.service
    - ansible-pull.timer
- name: Ensure ansible-pull timer is enabled
  ansible.builtin.file:
    src: /etc/systemd/system/ansible-pull.timer
    dest: /etc/systemd/system/timers.target.wants/ansible-pull.timer
    state: link
    follow: false
    owner: root
    group: root
    mode: '0755'
- name: Ensure provisioning user can connect using keys
  ansible.posix.authorized_key:
    user: "{{ provisioning.user.name }}"
    state: present
    key: "{{ provisioning.user.public_key_url }}"
  when: provisioning.user.public_key_url is defined
